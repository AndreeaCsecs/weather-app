[{"/Users/andreeacsecs/Desktop/weather-app-push/weather-app/src/index.js":"1","/Users/andreeacsecs/Desktop/weather-app-push/weather-app/src/App.js":"2","/Users/andreeacsecs/Desktop/weather-app-push/weather-app/src/components/Footer.jsx":"3","/Users/andreeacsecs/Desktop/weather-app-push/weather-app/src/components/Nav.jsx":"4","/Users/andreeacsecs/Desktop/weather-app-push/weather-app/src/pages/City.jsx":"5","/Users/andreeacsecs/Desktop/weather-app-push/weather-app/src/components/Search.jsx":"6","/Users/andreeacsecs/Desktop/weather-app-push/weather-app/src/custom-hooks/usePositions.jsx":"7","/Users/andreeacsecs/Desktop/weather-app-push/weather-app/src/utils.js":"8"},{"size":197,"mtime":1675355351779,"results":"9","hashOfConfig":"10"},{"size":957,"mtime":1680704215632,"results":"11","hashOfConfig":"10"},{"size":475,"mtime":1680468299875,"results":"12","hashOfConfig":"10"},{"size":333,"mtime":1680374197181,"results":"13","hashOfConfig":"10"},{"size":5210,"mtime":1683303653619,"results":"14","hashOfConfig":"10"},{"size":2769,"mtime":1683237837743,"results":"15","hashOfConfig":"10"},{"size":657,"mtime":1679422662053,"results":"16","hashOfConfig":"10"},{"size":76,"mtime":1683217661681,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1baoc4f",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/andreeacsecs/Desktop/weather-app-push/weather-app/src/index.js",[],[],"/Users/andreeacsecs/Desktop/weather-app-push/weather-app/src/App.js",["44"],[],"import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Search from \"./components/Search\";\nimport City from \"./pages/City\";\nimport { usePosition } from \"./custom-hooks/usePositions\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport Footer from \"./components/Footer\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  const { latitude, longitude, error } = usePosition();\n  const [cityName, setCityName] = useState(\"Bucharest\");\n\n  return (\n    <div className=\"container\">\n      <Nav />\n      <div\n        className=\"row m-4\"\n        id=\"colored-card\"\n        style={{ height: \"550px\", maxWidth: \"1100px\" }}\n      >\n        <div className=\"col-lg-7\">\n          <City lat={latitude} long={longitude} cityName={cityName} />\n        </div>\n        <div className=\"col-lg-5\" id=\"search-col\">\n          <Search setCityName={setCityName} />\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/andreeacsecs/Desktop/weather-app-push/weather-app/src/components/Footer.jsx",[],[],"/Users/andreeacsecs/Desktop/weather-app-push/weather-app/src/components/Nav.jsx",[],[],"/Users/andreeacsecs/Desktop/weather-app-push/weather-app/src/pages/City.jsx",["45"],[],"/Users/andreeacsecs/Desktop/weather-app-push/weather-app/src/components/Search.jsx",["46"],[],"import { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport React, { useState } from \"react\";\nimport locationIcon from \"./Images/yourlocation.png\";\nimport { clientKey } from \"../utils\";\nimport clock from \"./Images/clock_springs.png\";\n\nconst nth = function (d) {\n  if (d > 3 && d < 21) return \"th\";\n  switch (d % 10) {\n    case 1:\n      return \"st\";\n    case 2:\n      return \"nd\";\n    case 3:\n      return \"rd\";\n    default:\n      return \"th\";\n  }\n};\n\nconst now = new Date();\nconst date = now.getDate();\nconst month = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"Jun\",\n  \"Jul\",\n  \"Aug\",\n  \"Sep\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\",\n][now.getMonth()];\n\nconst Search = ({ setCityName }) => {\n  const [place, setPlace] = useState(\"Bucharest, Romania\");\n\n  const [items, setItems] = useState([]);\n  const handleSelect = (item) => {\n    setCityName(item.name);\n    setPlace(item.name + \",\" + \" \" + item.country);\n  };\n\n  const handleOnSearch = async (search) => {\n    let url = `https://api.weatherapi.com/v1/search.json?key=${clientKey}&q=${search}`;\n\n    const response = await fetch(url);\n    let data = await response.json();\n    setItems(data);\n  };\n\n  return (\n    <div className=\"Search m-4\">\n      <div style={{ maxWidth: \"400px\" }}>\n        <ReactSearchAutocomplete\n          onSearch={handleOnSearch}\n          items={items}\n          onSelect={handleSelect}\n        />\n      </div>\n\n      <div className=\"your-location my-3 d-flex justify-content-start\">\n        <img\n          src={locationIcon}\n          alt=\"\"\n          style={{ width: \"25px\", height: \"25px\" }}\n          className=\"m-2 \"\n        />\n        <div className=\"place m-2\">{place}</div>\n      </div>\n\n      <div className=\"d-flex flex-column p-2\">\n        <div className=\"oval align-self-center p-3 \">\n          <img\n            src={clock}\n            alt=\"\"\n            style={{ width: \"75.19px\", height: \"38.04px\" }}\n            className=\"my-4 mx-1\"\n          />\n          <div className=\"time my-4\">\n            {now.toLocaleString(\"en-GB\", {\n              hour: \"numeric\",\n              minute: \"numeric\",\n              hour12: true,\n            })}\n          </div>\n        </div>\n\n        <div className=\"date align-self-center p-3 m-2\">\n          <div className=\"today-date mb-3\">\n            {date}\n            <sup>{nth(date)}</sup> {month} '\n            {now.toLocaleDateString(\"en\", { year: \"2-digit\" })}\n          </div>\n\n          <div className=\"weekday-hour\">\n            {now.toLocaleString(\"en-us\", { weekday: \"long\" })} |{\" \"}\n            {now.toLocaleString(\"en-GB\", {\n              hour: \"numeric\",\n              minute: \"numeric\",\n              hour12: true,\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n","/Users/andreeacsecs/Desktop/weather-app-push/weather-app/src/custom-hooks/usePositions.jsx",[],[],"/Users/andreeacsecs/Desktop/weather-app-push/weather-app/src/utils.js",[],[],{"ruleId":"47","severity":1,"message":"48","line":12,"column":32,"nodeType":"49","messageId":"50","endLine":12,"endColumn":37},{"ruleId":"51","severity":1,"message":"52","line":60,"column":6,"nodeType":"53","endLine":60,"endColumn":27,"suggestions":"54"},{"ruleId":"55","severity":1,"message":"56","line":44,"column":30,"nodeType":"57","messageId":"58","endLine":44,"endColumn":31},"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getFutureData' and 'getWeatherData'. Either include them or remove the dependency array.","ArrayExpression",["59"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",{"desc":"60","fix":"61"},"Update the dependencies array to be: [cityName, getFutureData, getWeatherData, lat, long]",{"range":"62","text":"63"},[2056,2077],"[cityName, getFutureData, getWeatherData, lat, long]"]